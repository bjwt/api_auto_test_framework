{"uid":"faf0df88c9613e24","name":"下单功能数据驱动测试","fullName":"test_cases.test_order_flow.TestOrderFlow#test_create_order_data_driven","historyId":"e1c5a15fffe91e7b7e3fd1aaa0bfb66c","time":{"start":1758343272121,"stop":1758343272128,"duration":7},"description":"数据驱动测试示例","descriptionHtml":"<p>数据驱动测试示例</p>\n","status":"failed","statusMessage":"AssertionError: 预期下单失败，但实际成功\nassert 10000 is None","statusTrace":"self = <test_order_flow.TestOrderFlow object at 0x7f35ce036908>\ncase_data = {'expected': 'should_fail', 'item_id': 999, 'password': 'test123456', 'quantity': 1, ...}\n\n    @allure.story(\"数据驱动测试\")\n    @allure.title(\"下单功能数据驱动测试\")\n    @pytest.mark.parametrize(\"case_data\", load_test_data(\"order_cases\"))\n    def test_create_order_data_driven(self, case_data):\n        \"\"\"数据驱动测试示例\"\"\"\n        result = self.order_business.create_order_flow(\n            case_data[\"username\"],\n            case_data[\"password\"],\n            case_data[\"item_id\"],\n            case_data[\"quantity\"]\n        )\n    \n        if case_data[\"expected\"] == \"should_success\":\n            assert result is not None, \"预期下单成功，但实际失败\"\n        else:\n>           assert result is None, \"预期下单失败，但实际成功\"\nE           AssertionError: 预期下单失败，但实际成功\nE           assert 10000 is None\n\ntest_cases/test_order_flow.py:61: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1758343272121,"stop":1758343272121,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1758343272157,"stop":1758343272157,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"电商平台"},{"name":"story","value":"数据驱动测试"},{"name":"feature","value":"订单流程"},{"name":"parentSuite","value":"test_cases"},{"name":"suite","value":"test_order_flow"},{"name":"subSuite","value":"TestOrderFlow"},{"name":"host","value":"iZ2ze32pafdbs32qn8pvbwZ"},{"name":"thread","value":"9962-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_order_flow"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case_data","value":"{'username': 'test_user', 'password': 'test123456', 'item_id': 999, 'quantity': 1, 'expected': 'should_fail'}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"faf0df88c9613e24.json","parameterValues":["{'username': 'test_user', 'password': 'test123456', 'item_id': 999, 'quantity': 1, 'expected': 'should_fail'}"]}