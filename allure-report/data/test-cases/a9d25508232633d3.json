{"uid":"a9d25508232633d3","name":"下单功能数据驱动测试 - 1","fullName":"test_cases.test_order_flow.TestOrderFlow#test_create_order_data_driven","historyId":"cc67d2f9cf5c54eb2eece9c0317784a6","time":{"start":1758685209400,"stop":1758685209408,"duration":8},"description":"测试数据: 用户=test_user, 商品=1, 数量=2000000, 预期=should_success","descriptionHtml":"<p>测试数据: 用户=test_user, 商品=1, 数量=2000000, 预期=should_success</p>\n","status":"broken","statusMessage":"Exception: 下单失败: {\n  \"code\": 400,\n  \"msg\": \"库存不足\"\n}","statusTrace":"self = <test_order_flow.TestOrderFlow object at 0x7f7acfc480b8>\ncase_data = {'expected': 'should_success', 'item_id': 1, 'password': 'test123456', 'quantity': 2000000, ...}\n\n    @allure.story(\"数据驱动测试\")\n    @allure.title(\"下单功能数据驱动测试 - {case_data[item_id]}\")\n    @pytest.mark.parametrize(\"case_data\", load_test_data(\"order_cases\"))\n    def test_create_order_data_driven(self, case_data):\n        \"\"\"数据驱动测试示例\"\"\"\n        test_description = f\"测试数据: 用户={case_data['username']}, 商品={case_data['item_id']}, 数量={case_data['quantity']}, 预期={case_data['expected']}\"\n        allure.dynamic.description(test_description)\n    \n        if case_data[\"expected\"] == \"should_success\":\n            # 预期成功的测试用例\n            result = self.order_business.create_order_flow(\n                case_data[\"username\"],\n                case_data[\"password\"],\n                case_data[\"item_id\"],\n>               case_data[\"quantity\"]\n            )\n\ntest_cases/test_order_flow.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <business.order_business.OrderBusiness object at 0x7f7acfbf8ba8>, username = 'test_user', password = 'test123456', item_id = 1, quantity = 2000000\n\n    def create_order_flow(self, username, password, item_id, quantity=1):\n        \"\"\"\n        完整的下单业务流程：登录 -> 创建订单\n        :return: 订单ID\n        \"\"\"\n        # 1. 登录获取session\n        session = self.login_and_get_session(username, password)\n    \n        # 2. 创建订单\n        order_api = OrderApi()\n        response = order_api.create_order(session, item_id, quantity)\n    \n        if response.status_code != 200:\n>           raise Exception(f\"下单失败: {response.text}\")\nE           Exception: 下单失败: {\nE             \"code\": 400,\nE             \"msg\": \"库存不足\"\nE           }\n\nbusiness/order_business.py:51: Exception","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"setup","time":{"start":1758685209399,"stop":1758685209399,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1758685209449,"stop":1758685209449,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"数据驱动测试"},{"name":"feature","value":"订单流程"},{"name":"epic","value":"电商平台"},{"name":"parentSuite","value":"test_cases"},{"name":"suite","value":"test_order_flow"},{"name":"subSuite","value":"TestOrderFlow"},{"name":"host","value":"iZ2ze32pafdbs32qn8pvbwZ"},{"name":"thread","value":"921-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_order_flow"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case_data","value":"{'username': 'test_user', 'password': 'test123456', 'item_id': 1, 'quantity': 2000000, 'expected': 'should_success'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3a08632d34c971f5","status":"passed","time":{"start":1758684926244,"stop":1758684926251,"duration":7}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a9d25508232633d3.json","parameterValues":["{'username': 'test_user', 'password': 'test123456', 'item_id': 1, 'quantity': 2000000, 'expected': 'should_success'}"]}