{"name": "下单功能数据驱动测试 - 1", "status": "failed", "statusDetails": {"message": "AssertionError: assert ('失败' in \"HTTPConnectionPool(host='127.0.0.1', port=8000): Max retries exceeded with url: /api/login (Caused by NewConnectionEr...ion.HTTPConnection object at 0x7f3864b9f128>: Failed to establish a new connection: [Errno 111] Connection refused',))\" or '错误' in \"HTTPConnectionPool(host='127.0.0.1', port=8000): Max retries exceeded with url: /api/login (Caused by NewConnectionEr...ion.HTTPConnection object at 0x7f3864b9f128>: Failed to establish a new connection: [Errno 111] Connection refused',))\" or '不存在' in \"HTTPConnectionPool(host='127.0.0.1', port=8000): Max retries exceeded with url: /api/login (Caused by NewConnectionEr...ion.HTTPConnection object at 0x7f3864b9f128>: Failed to establish a new connection: [Errno 111] Connection refused',))\")", "trace": "self = <test_order_flow.TestOrderFlow object at 0x7f3864b9fb38>\ncase_data = {'expected': 'should_fail', 'item_id': 1, 'password': 'test123456', 'quantity': 1000, ...}\n\n    @allure.story(\"数据驱动测试\")\n    @allure.title(\"下单功能数据驱动测试 - {case_data[item_id]}\")\n    @pytest.mark.parametrize(\"case_data\", load_test_data(\"order_cases\"))\n    def test_create_order_data_driven(self, case_data):\n        \"\"\"数据驱动测试示例\"\"\"\n        test_description = f\"测试数据: 用户={case_data['username']}, 商品={case_data['item_id']}, 数量={case_data['quantity']}, 预期={case_data['expected']}\"\n        allure.dynamic.description(test_description)\n    \n        if case_data[\"expected\"] == \"should_success\":\n            # 预期成功的测试用例\n            result = self.order_business.create_order_flow(\n                case_data[\"username\"],\n                case_data[\"password\"],\n                case_data[\"item_id\"],\n                case_data[\"quantity\"]\n            )\n            # 断言订单创建成功\n            assert result is not None, \"预期下单成功，但订单ID为空\"\n            assert isinstance(result, int), \"订单ID应为整数\"\n            print(f\"用例通过 - 成功创建订单，订单ID: {result}\")\n    \n        else:\n            # 预期失败的测试用例 - 使用pytest.raises捕获异常\n            with pytest.raises(Exception) as exc_info:\n                self.order_business.create_order_flow(\n                    case_data[\"username\"],\n                    case_data[\"password\"],\n                    case_data[\"item_id\"],\n                    case_data[\"quantity\"]\n                )\n    \n            # 验证异常信息中包含预期的错误内容\n            error_message = str(exc_info.value)\n>           assert \"失败\" in error_message or \"错误\" in error_message or \"不存在\" in error_message\nE           assert ('失败' in \"HTTPConnectionPool(host='127.0.0.1', port=8000): Max retries exceeded with url: /api/login (Caused by NewConnectionEr...ion.HTTPConnection object at 0x7f3864b9f128>: Failed to establish a new connection: [Errno 111] Connection refused',))\" or '错误' in \"HTTPConnectionPool(host='127.0.0.1', port=8000): Max retries exceeded with url: /api/login (Caused by NewConnectionEr...ion.HTTPConnection object at 0x7f3864b9f128>: Failed to establish a new connection: [Errno 111] Connection refused',))\" or '不存在' in \"HTTPConnectionPool(host='127.0.0.1', port=8000): Max retries exceeded with url: /api/login (Caused by NewConnectionEr...ion.HTTPConnection object at 0x7f3864b9f128>: Failed to establish a new connection: [Errno 111] Connection refused',))\")\n\ntest_cases/test_order_flow.py:80: AssertionError"}, "description": "测试数据: 用户=test_user, 商品=1, 数量=1000, 预期=should_fail", "parameters": [{"name": "case_data", "value": "{'username': 'test_user', 'password': 'test123456', 'item_id': 1, 'quantity': 1000, 'expected': 'should_fail'}"}], "start": 1758699761659, "stop": 1758699761662, "uuid": "a6c2a205-81f4-40ac-8fdf-91696f5c8a59", "historyId": "da6cfbb0ad89e0e02ff379e486a20a11", "testCaseId": "7f40158773c814ffdcaa44bf915572b3", "fullName": "test_cases.test_order_flow.TestOrderFlow#test_create_order_data_driven", "labels": [{"name": "story", "value": "数据驱动测试"}, {"name": "epic", "value": "电商平台"}, {"name": "feature", "value": "订单流程"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_order_flow"}, {"name": "subSuite", "value": "TestOrderFlow"}, {"name": "host", "value": "iZ2ze32pafdbs32qn8pvbwZ"}, {"name": "thread", "value": "2737-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_order_flow"}]}